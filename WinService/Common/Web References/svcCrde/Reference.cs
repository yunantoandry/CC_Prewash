//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Common.svcCrde {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProcessManagerSoap", Namespace="http://tempuri.org/")]
    public partial class ProcessManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSecurityTokenOperationCompleted;
        
        private SecurityToken securityTokenValueField;
        
        private System.Threading.SendOrPostCallback CallProcessManagerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProcessManager() {
            this.Url = global::Common.Properties.Settings.Default.Common_svcCrde_ProcessManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SecurityToken SecurityTokenValue {
            get {
                return this.securityTokenValueField;
            }
            set {
                this.securityTokenValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSecurityTokenCompletedEventHandler GetSecurityTokenCompleted;
        
        /// <remarks/>
        public event CallProcessManagerCompletedEventHandler CallProcessManagerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecurityToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityToken GetSecurityToken(string userId, string hashedPassword) {
            object[] results = this.Invoke("GetSecurityToken", new object[] {
                        userId,
                        hashedPassword});
            return ((SecurityToken)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityTokenAsync(string userId, string hashedPassword) {
            this.GetSecurityTokenAsync(userId, hashedPassword, null);
        }
        
        /// <remarks/>
        public void GetSecurityTokenAsync(string userId, string hashedPassword, object userState) {
            if ((this.GetSecurityTokenOperationCompleted == null)) {
                this.GetSecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("GetSecurityToken", new object[] {
                        userId,
                        hashedPassword}, this.GetSecurityTokenOperationCompleted, userState);
        }
        
        private void OnGetSecurityTokenOperationCompleted(object arg) {
            if ((this.GetSecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityTokenCompleted(this, new GetSecurityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityTokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallProcessManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CallProcessManager(string applicationXML) {
            object[] results = this.Invoke("CallProcessManager", new object[] {
                        applicationXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallProcessManagerAsync(string applicationXML) {
            this.CallProcessManagerAsync(applicationXML, null);
        }
        
        /// <remarks/>
        public void CallProcessManagerAsync(string applicationXML, object userState) {
            if ((this.CallProcessManagerOperationCompleted == null)) {
                this.CallProcessManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallProcessManagerOperationCompleted);
            }
            this.InvokeAsync("CallProcessManager", new object[] {
                        applicationXML}, this.CallProcessManagerOperationCompleted, userState);
        }
        
        private void OnCallProcessManagerOperationCompleted(object arg) {
            if ((this.CallProcessManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallProcessManagerCompleted(this, new CallProcessManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class SecurityToken : System.Web.Services.Protocols.SoapHeader {
        
        private string userIdField;
        
        private string digestedHashedPasswordField;
        
        private long createdField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string DigestedHashedPassword {
            get {
                return this.digestedHashedPasswordField;
            }
            set {
                this.digestedHashedPasswordField = value;
            }
        }
        
        /// <remarks/>
        public long Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetSecurityTokenCompletedEventHandler(object sender, GetSecurityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CallProcessManagerCompletedEventHandler(object sender, CallProcessManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallProcessManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallProcessManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591